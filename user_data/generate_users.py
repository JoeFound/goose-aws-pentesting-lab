# import pyyaml module
import yaml
import os
import secrets, string
from yaml.loader import SafeLoader    
from pywgkey import WgKey

NUMBER_OF_USERS=5
USERS_FILE = 'users.yml'

letters = string.ascii_letters
digits = string.digits
special_chars = "$%&()=_.+"
alphabet = letters + digits + special_chars
pwd_length = 16

def generate_password():
    pwd = ''
    for i in range(pwd_length):
        pwd += ''.join(secrets.choice(alphabet))
    return(pwd)





dump=False

if os.path.exists(USERS_FILE):
    # Open the file and load the file
    with open(USERS_FILE) as f:
        data = yaml.load(f, Loader=SafeLoader)
        for item in data["users"]:
            # Generate Passwords
            try: 
                if not len(item["password"]) > 0:
                    dump=True
                    item["password"] = generate_password()
            except:
                dump=True
                item["password"] = generate_password() 
            # Generate Wiregards keys
            try: 
                key = WgKey()
                if item["wireguard_keys"] is None or len(item["wireguard_keys"]) == 0:
                    dump=True 
                    item['wireguard_keys']= dict(private=key.privkey, public=key.pubkey)
            except:
                dump=True       
                item['wireguard_keys']= dict(private=key.privkey, public=key.pubkey)

else:
    # Generate all the user data
    dump=True
    data = dict(users=[])
    for i in range(NUMBER_OF_USERS):
        key = WgKey()
        data["users"].append(dict(
            name="user"+str(i+1),
            password=generate_password(),
            wireguard= dict(private=key.privkey, public=key.pubkey)
        ))


if dump:
    print(" --- Saving passwords ---")
    with open(USERS_FILE, 'w') as file:
        yaml.dump(data, file)
